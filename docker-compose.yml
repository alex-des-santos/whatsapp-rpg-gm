version: '3.8'

services:
  # Aplicação principal
  rpg-gm-app:
    build: .
    container_name: whatsapp-rpg-gm
    ports:
      - "3000:3000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - API_HOST=0.0.0.0
      - API_PORT=3000
      - DATABASE_URL=postgresql://rpg_user:rpg_password@postgres:5432/rpg_gm_db
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./.env:/app/.env
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - rpg-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rpg-postgres
    environment:
      - POSTGRES_DB=rpg_gm_db
      - POSTGRES_USER=rpg_user
      - POSTGRES_PASSWORD=rpg_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    networks:
      - rpg-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: rpg-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - rpg-network

  # Streamlit Dashboard
  streamlit:
    build: .
    container_name: rpg-streamlit
    command: streamlit run src/interfaces/streamlit_dashboard.py --server.port=8501 --server.address=0.0.0.0
    ports:
      - "8501:8501"
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    volumes:
      - ./src:/app/src
      - ./.env:/app/.env
    depends_on:
      - rpg-gm-app
    restart: unless-stopped
    networks:
      - rpg-network

  # Gradio Interface
  gradio:
    build: .
    container_name: rpg-gradio
    command: python src/interfaces/gradio_interface.py
    ports:
      - "7860:7860"
    environment:
      - GRADIO_SERVER_PORT=7860
      - GRADIO_SHARE=false
    volumes:
      - ./src:/app/src
      - ./.env:/app/.env
    depends_on:
      - rpg-gm-app
    restart: unless-stopped
    networks:
      - rpg-network

  # PgAdmin (opcional - para administração do PostgreSQL)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: rpg-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@rpg-gm.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - rpg-network
    profiles:
      - admin

  # Redis Commander (opcional - para administração do Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: rpg-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - rpg-network
    profiles:
      - admin

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  rpg-network:
    driver: bridge